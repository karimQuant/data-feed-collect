


apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30532
  type: NodePort

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16.3-alpine
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-db
        - name: PGOPTIONS
          value: "-c max_connections=5000 -c shared_buffers=128MB -c idle_in_transaction_session_timeout=600000"
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "10Gi"
            cpu: "2"
          limits:
            memory: "10Gi"
            cpu: "2"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

### Metrics

---
# Postgres Exporter Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter-deployment
  labels:
    app: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter:latest
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        env:
          # Use the same secrets to build the DSN
          - name: DATA_SOURCE_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: postgres-user
          - name: DATA_SOURCE_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: postgres-password
          - name: DATA_SOURCE_URI
            value: "postgres-service:5432/postgres?sslmode=disable"
        ports:
        - containerPort: 9187

---
# Postgres Exporter Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter-service
  labels:
    app: postgres-exporter
spec:
  selector:
    app: postgres-exporter
  ports:
    - name: metrics
      protocol: TCP
      port: 9187
      targetPort: 9187

---
# (Optional) ServiceMonitor for Prometheus Operator
# If you are using Prometheus Operator, this will tell Prometheus to scrape the exporter.
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter-servicemonitor
  labels:
    release: prometheus
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  endpoints:
    - port: metrics
      interval: 30s